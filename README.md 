# 📨 RabbitMQ Driver Verification - CMPE 273 Assignment

## 📌 Objective

Develop a message queue system using RabbitMQ to **send and receive 10,000 messages** between a Producer and Consumer, ensuring **no message loss** in transit.

---

## 🗂️ Folder Structure

rabbitmq-driver-test/ ├── producer/ │ └── cmpe273send.py ├── consumer/ │ └── cmpe273receive.py ├── screenshots/ │ ├── sent.png # Screenshot of producer sending messages │ ├── received.png # Screenshot of consumer receiving messages │ └── rabbitmq_queue.png # Screenshot of RabbitMQ queue status └── README.md


---

## ⚙️ Prerequisites

- Python 3.x installed
- Install `pika` library:
  ```bash
  python3 -m pip install pika
Docker installed and running
VS Code with correct Python interpreter selected
🐇 Set Up RabbitMQ (via Docker)

Start RabbitMQ server locally:

docker run -d --hostname my-rabbit --name some-rabbit \
  -p 5672:5672 -p 15672:15672 rabbitmq:3-management
🔗 RabbitMQ Management UI: http://localhost:15672
👤 Username: guest
🔑 Password: guest

🚀 How to Run

1️⃣ Start the Consumer (in one terminal):
cd consumer
python3 cmpe273receive.py
2️⃣ Start the Producer (in another terminal):
cd producer
python3 cmpe273send.py
✅ Expected Output

🖥️ Consumer Terminal
✅ Received 1000 messages...
✅ Received 2000 messages...
...
🎉 All 10000 messages received successfully!
🖥️ Producer Terminal
✅ Sent 10,000 messages.
...

## 📸 Screenshots

### ✅ Messages Sent from Producer
![Sent Messages](screenshots/Sent.png)

### 📥 Messages Received by Consumer
![Received Messages](screenshots/Received.png)

### 📊 RabbitMQ Queue Dashboard
![RabbitMQ Queue Dashboard](screenshots/rabbit_mq.png)

x
📊 Test Results

Metric	Count
Messages Sent	10,000
Messages Received	10,000
Messages Lost	0
Message Loss Rate	0.00%
✅ Message queue is working reliably with RabbitMQ and pika.

🧠 Conclusion

This setup demonstrates how to implement and test a reliable asynchronous messaging system using RabbitMQ in Python. It verifies that message delivery is complete, even at high volume, with zero data loss.